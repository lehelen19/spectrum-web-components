import { g as getLabelFromSlot } from './get-label-from-slot-Cg6mfN40.js';
import { O as ObserveSlotText } from './observe-slot-text-C6K935AT.js';
import { L as LanguageResolutionController } from './LanguageResolution-BeoILyI5.js';
import './sp-field-label-oZHlTsnx.js';
import { i } from './lit-element-BulMEkr1.js';
import { S as SizedMixin } from './sizedMixin-BzkTbMb8.js';
import { S as SpectrumElement, n, d as defineElement } from './define-element-C_3bgzm7.js';
import { x, T } from './lit-html-COgVUehj.js';
import { e as e$1 } from './query-DQF6X5qW.js';

const e=i`
    :host{--spectrum-progressbar-animation-ease-in-out-indeterminate:var(--spectrum-animation-ease-in-out);--spectrum-progressbar-animation-duration-indeterminate:var(--spectrum-animation-duration-2000);--spectrum-progressbar-corner-radius:var(--spectrum-corner-radius-100);--spectrum-progressbar-fill-size-indeterminate:70%;--spectrum-progressbar-size-2400:192px;--spectrum-progressbar-size-2500:200px;--spectrum-progressbar-size-2800:224px;--spectrum-progressbar-font-size:var(--spectrum-font-size-75);--spectrum-progressbar-line-height-cjk:var(--spectrum-cjk-line-height-100);--spectrum-progressbar-min-size:var(--spectrum-progress-bar-minimum-width);--spectrum-progressbar-max-size:var(--spectrum-progress-bar-maximum-width);--spectrum-progressbar-thickness:var(--spectrum-progress-bar-thickness-medium);--spectrum-progressbar-line-height:var(--spectrum-line-height-100);--spectrum-progressbar-spacing-label-to-progressbar:var(--spectrum-spacing-75);--spectrum-progressbar-spacing-top-to-text:var(--spectrum-component-top-to-text-100);--spectrum-progressbar-spacing-label-to-text:var(--spectrum-spacing-200);--spectrum-progressbar-text-color:var(--spectrum-neutral-content-color-default);--spectrum-progressbar-track-color:var(--spectrum-gray-300);--spectrum-progressbar-fill-color:var(--spectrum-accent-color-900);--spectrum-progressbar-fill-color-positive:var(--spectrum-positive-visual-color);--spectrum-progressbar-fill-color-notice:var(--spectrum-notice-visual-color);--spectrum-progressbar-fill-color-negative:var(--spectrum-negative-visual-color);--spectrum-progressbar-label-and-value-white:var(--spectrum-white);--spectrum-progressbar-track-color-white:var(--spectrum-transparent-white-300);--spectrum-progressbar-fill-color-white:var(--spectrum-white);--spectrum-meter-min-width:var(--spectrum-meter-minimum-width);--spectrum-meter-max-width:var(--spectrum-meter-maximum-width);--spectrum-meter-inline-size:var(--spectrum-meter-default-width);--spectrum-meter-thickness-s:var(--spectrum-meter-thickness-small);--spectrum-meter-thickness-l:var(--spectrum-meter-thickness-large);--spectrum-meter-top-to-text:var(--spectrum-component-top-to-text)}:host([size=s]){--spectrum-progressbar-size-default:var(--spectrum-progressbar-size-2400);--spectrum-progressbar-font-size:var(--spectrum-font-size-75);--spectrum-progressbar-thickness:var(--spectrum-progress-bar-thickness-small);--spectrum-progressbar-spacing-top-to-text:var(--spectrum-component-top-to-text-75)}:host{--spectrum-progressbar-size-default:var(--spectrum-progressbar-size-2400);--spectrum-progressbar-font-size:var(--spectrum-font-size-75);--spectrum-progressbar-thickness:var(--spectrum-progress-bar-thickness-large);--spectrum-progressbar-spacing-top-to-text:var(--spectrum-component-top-to-text-75)}:host([size=l]){--spectrum-progressbar-size-default:var(--spectrum-progressbar-size-2500);--spectrum-progressbar-font-size:var(--spectrum-font-size-100);--spectrum-progressbar-thickness:var(--spectrum-progress-bar-thickness-large);--spectrum-progressbar-spacing-top-to-text:var(--spectrum-component-top-to-text-200)}:host([size=xl]){--spectrum-progressbar-size-default:var(--spectrum-progressbar-size-2800);--spectrum-progressbar-font-size:var(--spectrum-font-size-200);--spectrum-progressbar-thickness:var(--spectrum-progress-bar-thickness-extra-large);--spectrum-progressbar-spacing-top-to-text:var(--spectrum-component-top-to-text-300)}.spectrum-Meter{--spectrum-progressbar-size-default:var(--mod-meter-inline-size,var(--spectrum-meter-inline-size));--spectrum-progressbar-max-size:var(--mod-meter-max-width,var(--spectrum-meter-max-width));--spectrum-progressbar-min-size:var(--mod-meter-min-width,var(--spectrum-meter-min-width))}:host([positive]) .spectrum-Meter .fill{background:var(--highcontrast-progressbar-fill-color,var(--mod-progressbar-fill-color-positive,var(--spectrum-progressbar-fill-color-positive)))}:host([notice]) .spectrum-Meter .fill{background:var(--highcontrast-progressbar-fill-color,var(--mod-progressbar-fill-color-notice,var(--spectrum-progressbar-fill-color-notice)))}:host([negative]) .spectrum-Meter .fill{background:var(--highcontrast-progressbar-fill-color,var(--mod-progressbar-fill-color-negative,var(--spectrum-progressbar-fill-color-negative)))}:host{font-size:var(--mod-progressbar-font-size,var(--spectrum-progressbar-font-size));vertical-align:top;inline-size:var(--mod-progressbar-size-default,var(--spectrum-progressbar-size-default));max-inline-size:var(--mod-progressbar-max-size,var(--spectrum-progressbar-max-size));min-inline-size:var(--mod-progressbar-min-size,var(--spectrum-progressbar-min-size));flex-flow:wrap;justify-content:space-between;align-items:center;display:inline-flex;position:relative}.label,.percentage{text-align:start;line-height:var(--mod-progressbar-line-height,var(--spectrum-progressbar-line-height));color:var(--mod-progressbar-text-color,var(--spectrum-progressbar-text-color));margin-block-start:var(--mod-progressbar-spacing-top-to-text,var(--spectrum-progressbar-spacing-top-to-text));margin-block-end:var(--mod-progressbar-spacing-label-to-progressbar,var(--spectrum-progressbar-spacing-label-to-progressbar))}.label:lang(ja),.label:lang(ko),.label:lang(zh),.percentage:lang(ja),.percentage:lang(ko),.percentage:lang(zh){line-height:var(--mod-progressbar-line-height-cjk,var(--spectrum-progressbar-line-height-cjk))}.label{flex:1}.percentage{align-self:flex-start;margin-inline-start:var(--mod-progressbar-spacing-label-to-text,var(--spectrum-progressbar-spacing-label-to-text))}.track{inline-size:100%;block-size:var(--mod-progressbar-thickness,var(--spectrum-progressbar-thickness));border-radius:var(--spectrum-progressbar-corner-radius);background:var(--highcontrast-progressbar-track-color,var(--mod-progressbar-track-color,var(--spectrum-progressbar-track-color)));overflow:hidden}.fill{block-size:var(--mod-progressbar-thickness,var(--spectrum-progressbar-thickness));background:var(--highcontrast-progressbar-fill-color,var(--mod-progressbar-fill-color,var(--spectrum-progressbar-fill-color)));border:none;transition:width 1s}:host([indeterminate]) .fill{inline-size:var(--mod-progressbar-fill-size-indeterminate,var(--spectrum-progressbar-fill-size-indeterminate));animation-timing-function:var(--mod-progressbar-animation-ease-in-out-indeterminate,var(--spectrum-progressbar-animation-ease-in-out-indeterminate));will-change:transform;position:relative}:host([side-label]){flex-flow:row;justify-content:space-between;display:inline-flex}:host([side-label]) .track{flex:1 1 var(--mod-progressbar-size-default,var(--spectrum-progressbar-size-default))}:host([side-label]) .label{flex-grow:0;margin-block-end:0;margin-inline-end:var(--mod-progressbar-spacing-label-to-text,var(--spectrum-progressbar-spacing-label-to-text))}:host([side-label]) .percentage{text-align:end;order:3;margin-block-end:0;margin-inline-start:var(--mod-spacing-progressbar-label-to-text,var(--spectrum-progressbar-spacing-label-to-text))}:host([static=white]) .fill{background:var(--mod-progressbar-fill-color-white,var(--spectrum-progressbar-fill-color-white))}:host([static=white]) .fill,:host([static=white]) .label,:host([static=white]) .percentage{color:var(--mod-progressbar-label-and-value-white,var(--spectrum-progressbar-label-and-value-white))}:host([static=white]) .track{background:var(--spectrum-progressbar-track-color-white)}:host([indeterminate]) .fill{animation:indeterminate-loop-ltr var(--mod-progressbar-animation-duration-indeterminate,var(--spectrum-progressbar-animation-duration-indeterminate))infinite}:host([indeterminate]) .fill:dir(rtl),:host([dir=rtl][indeterminate]) .fill{animation:indeterminate-loop-rtl var(--mod-progressbar-animation-duration-indeterminate,var(--spectrum-progressbar-animation-duration-indeterminate))infinite}@keyframes indeterminate-loop-ltr{0%{transform:translate(calc(var(--mod-progressbar-fill-size-indeterminate,var(--spectrum-progressbar-fill-size-indeterminate))*-1))}to{transform:translate(var(--mod-progressbar-size-default,var(--spectrum-progressbar-size-default)))}}@keyframes indeterminate-loop-rtl{0%{transform:translate(var(--mod-progressbar-size-default,var(--spectrum-progressbar-fill-size-indeterminate)))}to{transform:translate(calc(var(--mod-progressbar-size-default,var(--spectrum-progressbar-size-default))*-1))}}@media (forced-colors:active){.track{forced-color-adjust:none;--highcontrast-progressbar-fill-color:ButtonText;--highcontrast-progressbar-track-color:ButtonFace;border:1px solid ButtonText}}.fill{width:100%;transform-origin:0}:host([dir=rtl]) .fill{transform-origin:100%}
`;

var b=Object.defineProperty;var t=(o,a,e,s)=>{for(var l=void 0,n=o.length-1,p;n>=0;n--)(p=o[n])&&(l=(p(a,e,l))||l);return l&&b(a,e,l),l};class ProgressBar extends SizedMixin(ObserveSlotText(SpectrumElement,""),{noDefaultSize:!0}){constructor(){super(...arguments);this.indeterminate=!1;this.label="";this.languageResolver=new LanguageResolutionController(this);this.overBackground=!1;this.sideLabel=!1;this.progress=0;}static get styles(){return [e]}render(){return x`
            ${this.slotHasContent||this.label?x`
                      <sp-field-label size=${this.size} class="label">
                          ${this.slotHasContent?x``:this.label}

                          <slot @slotchange=${this.handleSlotchange}></slot>
                      </sp-field-label>
                  `:x``}
            ${this.label?x`
                      ${this.indeterminate?T:x`
                                <sp-field-label
                                    size=${this.size}
                                    class="percentage"
                                >
                                    ${new Intl.NumberFormat(this.languageResolver.language,{style:"percent",unitDisplay:"narrow"}).format(this.progress/100)}
                                </sp-field-label>
                            `}
                  `:T}
            <div class="track">
                <div
                    class="fill"
                    style="transform: scaleX(calc(${this.progress} / 100));"
                ></div>
            </div>
        `}handleSlotchange(){const e=getLabelFromSlot(this.label,this.slotEl);e&&(this.label=e);}firstUpdated(e){super.firstUpdated(e),this.hasAttribute("role")||this.setAttribute("role","progressbar");}updated(e){super.updated(e),e.has("indeterminate")&&(this.indeterminate?(this.removeAttribute("aria-valuemin"),this.removeAttribute("aria-valuemax"),this.removeAttribute("aria-valuenow")):(this.setAttribute("aria-valuemin","0"),this.setAttribute("aria-valuemax","100"))),!this.indeterminate&&e.has("progress")&&this.setAttribute("aria-valuenow",""+this.progress),e.has("label")&&(this.label.length?this.setAttribute("aria-label",this.label):e.get("label")===this.getAttribute("aria-label")&&this.removeAttribute("aria-label"));}}t([n({type:Boolean,reflect:!0})],ProgressBar.prototype,"indeterminate"),t([n({type:String,reflect:!0})],ProgressBar.prototype,"label"),t([n({type:Boolean,reflect:!0,attribute:"over-background"})],ProgressBar.prototype,"overBackground"),t([n({type:Boolean,reflect:!0,attribute:"side-label"})],ProgressBar.prototype,"sideLabel"),t([n({type:Number})],ProgressBar.prototype,"progress"),t([n({type:String,reflect:!0})],ProgressBar.prototype,"static"),t([e$1("slot")],ProgressBar.prototype,"slotEl");

defineElement("sp-progress-bar",ProgressBar);
